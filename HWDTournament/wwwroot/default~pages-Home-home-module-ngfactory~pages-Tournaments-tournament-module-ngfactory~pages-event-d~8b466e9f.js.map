{"version":3,"sources":["webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","webpack:///./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","webpack:///./node_modules/angular2-toaster/angular2-toaster.js","webpack:///./node_modules/angular2-toaster/src/bodyOutputType.js","webpack:///./node_modules/angular2-toaster/src/toast.component.js","webpack:///./node_modules/angular2-toaster/src/toast.component.d.ts.ToastComponent.html","webpack:///./node_modules/angular2-toaster/src/toaster-config.js","webpack:///./node_modules/angular2-toaster/src/toaster-container.component.js","webpack:///./node_modules/angular2-toaster/src/toaster-container.component.d.ts.ToasterContainerComponent.html","webpack:///./node_modules/angular2-toaster/src/toaster.module.js","webpack:///./node_modules/angular2-toaster/src/toaster.service.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/map.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/map.js","webpack:///./src/app/shared/interfaces/interfaces.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oCAAoC,EAAE;AACtG;AACA;AACA,oDAAoD,8BAA8B,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,6DAA6D;AACnH;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,8BAA8B,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAK;AACb,kCAAkC,6DAAa;AAC/C;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA,gBAAgB,mEAAO;AACvB,oBAAoB,iEAAK,gDAAgD,iEAAK,EAAE,0CAA0C;AAC1H,oBAAoB,sEAAU;AAC9B,wBAAwB,iEAAK;AAC7B;AACA,yBAAyB;AACzB,wBAAwB,mEAAO;AAC/B;AACA,oBAAoB,sEAAU;AAC9B,wBAAwB,mEAAO,wBAAwB,iEAAK;AAC5D;AACA,yBAAyB;AAC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","file":"default~pages-Home-home-module-ngfactory~pages-Tournaments-tournament-module-ngfactory~pages-event-d~8b466e9f.js","sourcesContent":["<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","export { ToastComponent } from \"./src/toast.component\";\nexport { ToasterContainerComponent } from \"./src/toaster-container.component\";\nexport { ToasterService } from \"./src/toaster.service\";\nexport { ToasterConfig } from \"./src/toaster-config\";\nexport { BodyOutputType } from \"./src/bodyOutputType\";\nexport { ToasterModule } from \"./src/toaster.module\";\n//# sourceMappingURL=angular2-toaster.js.map","export var BodyOutputType;\n(function (BodyOutputType) {\n    BodyOutputType[BodyOutputType[\"Default\"] = 0] = \"Default\";\n    BodyOutputType[BodyOutputType[\"TrustedHtml\"] = 1] = \"TrustedHtml\";\n    BodyOutputType[BodyOutputType[\"Component\"] = 2] = \"Component\";\n})(BodyOutputType || (BodyOutputType = {}));\n//# sourceMappingURL=bodyOutputType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input, Output, ViewChild, ViewContainerRef, EventEmitter, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { BodyOutputType } from './bodyOutputType';\nvar ToastComponent = /** @class */ (function () {\n    function ToastComponent(sanitizer, componentFactoryResolver, changeDetectorRef) {\n        this.sanitizer = sanitizer;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.changeDetectorRef = changeDetectorRef;\n        this.bodyOutputType = BodyOutputType;\n        this.clickEvent = new EventEmitter();\n    }\n    ToastComponent.prototype.ngOnInit = function () {\n        if (this.toast.closeHtml) {\n            this.safeCloseHtml = this.sanitizer.bypassSecurityTrustHtml(this.toast.closeHtml);\n        }\n        if (this.toast.bodyOutputType === BodyOutputType.TrustedHtml) {\n            this.safeBodyHtml = this.sanitizer.bypassSecurityTrustHtml(this.toast.body);\n        }\n    };\n    ToastComponent.prototype.ngAfterViewInit = function () {\n        if (this.toast.bodyOutputType === this.bodyOutputType.Component) {\n            var component = this.componentFactoryResolver.resolveComponentFactory(this.toast.body);\n            var componentInstance = this.componentBody.createComponent(component, undefined, this.componentBody.injector);\n            componentInstance.instance.toast = this.toast;\n            this.changeDetectorRef.detectChanges();\n        }\n    };\n    ToastComponent.prototype.click = function (event, toast) {\n        event.stopPropagation();\n        this.clickEvent.emit({\n            value: { toast: toast, isCloseButton: true }\n        });\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], ToastComponent.prototype, \"toast\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], ToastComponent.prototype, \"iconClass\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], ToastComponent.prototype, \"titleClass\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], ToastComponent.prototype, \"messageClass\", void 0);\n    __decorate([\n        ViewChild('componentBody', { read: ViewContainerRef }),\n        __metadata(\"design:type\", ViewContainerRef)\n    ], ToastComponent.prototype, \"componentBody\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], ToastComponent.prototype, \"clickEvent\", void 0);\n    ToastComponent = __decorate([\n        Component({\n            selector: '[toastComp]',\n            template: \"\\n        <i class=\\\"toaster-icon\\\" [ngClass]=\\\"iconClass\\\"></i>\\n        <div class=\\\"toast-content\\\">\\n            <div [ngClass]=\\\"titleClass\\\">{{toast.title}}</div>\\n            <div [ngClass]=\\\"messageClass\\\" [ngSwitch]=\\\"toast.bodyOutputType\\\">\\n                <div *ngSwitchCase=\\\"bodyOutputType.Component\\\" #componentBody></div>\\n                <div *ngSwitchCase=\\\"bodyOutputType.TrustedHtml\\\" [innerHTML]=\\\"safeBodyHtml\\\"></div>\\n                <div *ngSwitchCase=\\\"bodyOutputType.Default\\\">{{toast.body}}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"toast-close-button\\\" *ngIf=\\\"toast.showCloseButton\\\" (click)=\\\"click($event, toast)\\\"\\n            [innerHTML]=\\\"safeCloseHtml\\\">\\n        </div>\"\n        }),\n        __metadata(\"design:paramtypes\", [DomSanitizer,\n            ComponentFactoryResolver,\n            ChangeDetectorRef])\n    ], ToastComponent);\n    return ToastComponent;\n}());\nexport { ToastComponent };\n//# sourceMappingURL=toast.component.js.map","\n        <i class=\"toaster-icon\" [ngClass]=\"iconClass\"></i>\n        <div class=\"toast-content\">\n            <div [ngClass]=\"titleClass\">{{toast.title}}</div>\n            <div [ngClass]=\"messageClass\" [ngSwitch]=\"toast.bodyOutputType\">\n                <div *ngSwitchCase=\"bodyOutputType.Component\" #componentBody></div>\n                <div *ngSwitchCase=\"bodyOutputType.TrustedHtml\" [innerHTML]=\"safeBodyHtml\"></div>\n                <div *ngSwitchCase=\"bodyOutputType.Default\">{{toast.body}}</div>\n            </div>\n        </div>\n        <div class=\"toast-close-button\" *ngIf=\"toast.showCloseButton\" (click)=\"click($event, toast)\"\n            [innerHTML]=\"safeCloseHtml\">\n        </div>","import { BodyOutputType } from './bodyOutputType';\nvar ToasterConfig = /** @class */ (function () {\n    function ToasterConfig(configOverrides) {\n        configOverrides = configOverrides || {};\n        this.limit = configOverrides.limit || null;\n        this.tapToDismiss = configOverrides.tapToDismiss != null ? configOverrides.tapToDismiss : true;\n        this.showCloseButton = configOverrides.showCloseButton != null ? configOverrides.showCloseButton : false;\n        this.closeHtml = configOverrides.closeHtml || '<button class=\"toast-close-button\" type=\"button\">&times;</button>';\n        this.newestOnTop = configOverrides.newestOnTop != null ? configOverrides.newestOnTop : true;\n        this.timeout = configOverrides.timeout != null ? configOverrides.timeout : 5000;\n        this.typeClasses = configOverrides.typeClasses || {\n            error: 'toast-error',\n            info: 'toast-info',\n            wait: 'toast-wait',\n            success: 'toast-success',\n            warning: 'toast-warning'\n        };\n        this.iconClasses = configOverrides.iconClasses || {\n            error: 'icon-error',\n            info: 'icon-info',\n            wait: 'icon-wait',\n            success: 'icon-success',\n            warning: 'icon-warning'\n        };\n        this.bodyOutputType = configOverrides.bodyOutputType || BodyOutputType.Default;\n        this.bodyTemplate = configOverrides.bodyTemplate || 'toasterBodyTmpl.html';\n        this.defaultTypeClass = configOverrides.defaultTypeClass || 'toast-info';\n        this.positionClass = configOverrides.positionClass || 'toast-top-right';\n        this.titleClass = configOverrides.titleClass || 'toast-title';\n        this.messageClass = configOverrides.messageClass || 'toast-message';\n        this.animation = configOverrides.animation || '';\n        this.preventDuplicates = configOverrides.preventDuplicates != null ? configOverrides.preventDuplicates : false;\n        this.mouseoverTimerStop = configOverrides.mouseoverTimerStop != null ? configOverrides.mouseoverTimerStop : false;\n        this.toastContainerId = configOverrides.toastContainerId != null ? configOverrides.toastContainerId : null;\n    }\n    return ToasterConfig;\n}());\nexport { ToasterConfig };\n//# sourceMappingURL=toaster-config.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input, ChangeDetectorRef, NgZone } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { ToasterConfig } from './toaster-config';\nimport { ToasterService } from './toaster.service';\nvar ToasterContainerComponent = /** @class */ (function () {\n    function ToasterContainerComponent(toasterService, ref, ngZone) {\n        this.ref = ref;\n        this.ngZone = ngZone;\n        this.timeoutIds = new Map();\n        this.toasts = [];\n        this.toasterService = toasterService;\n    }\n    ToasterContainerComponent.prototype.ngOnInit = function () {\n        this.registerSubscribers();\n        if (this.isNullOrUndefined(this.toasterconfig)) {\n            this.toasterconfig = new ToasterConfig();\n        }\n    };\n    // event handlers\n    ToasterContainerComponent.prototype.click = function (toast, isCloseButton) {\n        if (this.toasterconfig.tapToDismiss || (toast.showCloseButton && isCloseButton)) {\n            var removeToast = true;\n            if (toast.clickHandler) {\n                if (typeof toast.clickHandler === 'function') {\n                    removeToast = toast.clickHandler(toast, isCloseButton);\n                }\n                else {\n                    console.log('The toast click handler is not a callable function.');\n                    return false;\n                }\n            }\n            if (removeToast) {\n                this.removeToast(toast);\n            }\n        }\n    };\n    ToasterContainerComponent.prototype.childClick = function ($event) {\n        this.click($event.value.toast, $event.value.isCloseButton);\n    };\n    ToasterContainerComponent.prototype.stopTimer = function (toast) {\n        if (this.toasterconfig.mouseoverTimerStop) {\n            var toastId = this.toastIdOrDefault(toast);\n            var timeoutId = this.timeoutIds.get(toastId);\n            if (timeoutId) {\n                window.clearTimeout(timeoutId);\n                this.timeoutIds.delete(toastId);\n            }\n        }\n    };\n    ToasterContainerComponent.prototype.restartTimer = function (toast) {\n        var timeoutId = this.timeoutIds.get(this.toastIdOrDefault(toast));\n        if (this.toasterconfig.mouseoverTimerStop) {\n            if (!timeoutId) {\n                this.configureTimer(toast);\n            }\n        }\n        else if (toast.timeout !== 0 && !timeoutId && this.toasterconfig.timeout) {\n            this.removeToast(toast);\n        }\n    };\n    // private functions\n    ToasterContainerComponent.prototype.registerSubscribers = function () {\n        var _this = this;\n        this.addToastSubscriber = this.toasterService.addToast.subscribe(function (toast) {\n            _this.addToast(toast);\n        });\n        this.clearToastsSubscriber = this.toasterService.clearToasts.subscribe(function (clearWrapper) {\n            _this.clearToasts(clearWrapper);\n        });\n    };\n    ToasterContainerComponent.prototype.addToast = function (toast) {\n        if (toast.toastContainerId && this.toasterconfig.toastContainerId\n            && toast.toastContainerId !== this.toasterconfig.toastContainerId) {\n            return;\n        }\n        ;\n        if (!toast.type) {\n            toast.type = this.toasterconfig.defaultTypeClass;\n        }\n        if (this.toasterconfig.preventDuplicates && this.toasts.length > 0) {\n            if (toast.toastId && this.toasts.some(function (t) { return t.toastId === toast.toastId; })) {\n                return;\n            }\n            else if (this.toasts.some(function (t) { return t.body === toast.body; })) {\n                return;\n            }\n        }\n        if (this.isNullOrUndefined(toast.showCloseButton)) {\n            if (typeof this.toasterconfig.showCloseButton === 'object') {\n                toast.showCloseButton = this.toasterconfig.showCloseButton[toast.type];\n            }\n            else if (typeof this.toasterconfig.showCloseButton === 'boolean') {\n                toast.showCloseButton = this.toasterconfig.showCloseButton;\n            }\n        }\n        if (toast.showCloseButton) {\n            toast.closeHtml = toast.closeHtml || this.toasterconfig.closeHtml;\n        }\n        toast.bodyOutputType = toast.bodyOutputType || this.toasterconfig.bodyOutputType;\n        this.configureTimer(toast);\n        if (this.toasterconfig.newestOnTop) {\n            this.toasts.unshift(toast);\n            if (this.isLimitExceeded()) {\n                this.toasts.pop();\n            }\n        }\n        else {\n            this.toasts.push(toast);\n            if (this.isLimitExceeded()) {\n                this.toasts.shift();\n            }\n        }\n        if (toast.onShowCallback) {\n            toast.onShowCallback(toast);\n        }\n    };\n    ToasterContainerComponent.prototype.configureTimer = function (toast) {\n        var _this = this;\n        var timeout = (typeof toast.timeout === 'number')\n            ? toast.timeout : this.toasterconfig.timeout;\n        if (typeof timeout === 'object') {\n            timeout = timeout[toast.type];\n        }\n        ;\n        if (timeout > 0) {\n            this.ngZone.runOutsideAngular(function () {\n                var timeoutId = window.setTimeout(function () {\n                    _this.ngZone.run(function () {\n                        _this.ref.markForCheck();\n                        _this.removeToast(toast);\n                    });\n                }, timeout);\n                _this.timeoutIds.set(_this.toastIdOrDefault(toast), timeoutId);\n            });\n        }\n    };\n    ToasterContainerComponent.prototype.isLimitExceeded = function () {\n        return this.toasterconfig.limit && this.toasts.length > this.toasterconfig.limit;\n    };\n    ToasterContainerComponent.prototype.removeToast = function (toast) {\n        var index = this.toasts.indexOf(toast);\n        if (index < 0) {\n            return;\n        }\n        ;\n        var toastId = this.toastIdOrDefault(toast);\n        var timeoutId = this.timeoutIds.get(toastId);\n        this.toasts.splice(index, 1);\n        if (timeoutId) {\n            window.clearTimeout(timeoutId);\n            this.timeoutIds.delete(toastId);\n        }\n        if (toast.onHideCallback) {\n            toast.onHideCallback(toast);\n        }\n        this.toasterService._removeToastSubject.next({ toastId: toastId, toastContainerId: toast.toastContainerId });\n    };\n    ToasterContainerComponent.prototype.removeAllToasts = function () {\n        for (var i = this.toasts.length - 1; i >= 0; i--) {\n            this.removeToast(this.toasts[i]);\n        }\n    };\n    ToasterContainerComponent.prototype.clearToasts = function (clearWrapper) {\n        var toastId = clearWrapper.toastId;\n        var toastContainerId = clearWrapper.toastContainerId;\n        if (this.isNullOrUndefined(toastContainerId)) {\n            this.clearToastsAction(toastId);\n        }\n        else if (toastContainerId === this.toasterconfig.toastContainerId) {\n            this.clearToastsAction(toastId);\n        }\n    };\n    ToasterContainerComponent.prototype.clearToastsAction = function (toastId) {\n        if (toastId) {\n            this.removeToast(this.toasts.filter(function (t) { return t.toastId === toastId; })[0]);\n        }\n        else {\n            this.removeAllToasts();\n        }\n    };\n    ToasterContainerComponent.prototype.toastIdOrDefault = function (toast) {\n        return toast.toastId || '';\n    };\n    ToasterContainerComponent.prototype.isNullOrUndefined = function (value) {\n        return value === null || typeof value === 'undefined';\n    };\n    ToasterContainerComponent.prototype.ngOnDestroy = function () {\n        if (this.addToastSubscriber) {\n            this.addToastSubscriber.unsubscribe();\n        }\n        if (this.clearToastsSubscriber) {\n            this.clearToastsSubscriber.unsubscribe();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", ToasterConfig)\n    ], ToasterContainerComponent.prototype, \"toasterconfig\", void 0);\n    ToasterContainerComponent = __decorate([\n        Component({\n            selector: 'toaster-container',\n            template: \"\\n        <div id=\\\"toast-container\\\" [ngClass]=\\\"[toasterconfig.positionClass]\\\">\\n            <div toastComp *ngFor=\\\"let toast of toasts\\\" class=\\\"toast\\\" [toast]=\\\"toast\\\"\\n                [@toastState]=\\\"toasterconfig.animation\\\"\\n                [iconClass]=\\\"toasterconfig.iconClasses[toast.type]\\\"\\n                [titleClass]=\\\"toasterconfig.titleClass\\\"\\n                [messageClass]=\\\"toasterconfig.messageClass\\\"\\n                [ngClass]=\\\"toasterconfig.typeClasses[toast.type]\\\"\\n                (click)=\\\"click(toast)\\\" (clickEvent)=\\\"childClick($event)\\\"\\n                (mouseover)=\\\"stopTimer(toast)\\\" (mouseout)=\\\"restartTimer(toast)\\\">\\n            </div>\\n        </div>\\n        \",\n            animations: [\n                trigger('toastState', [\n                    state('flyRight, flyLeft, slideDown, slideUp, fade', style({ opacity: 1, transform: 'translate(0,0)' })),\n                    transition('void => flyRight', [\n                        style({\n                            opacity: 0, transform: 'translateX(100%)'\n                        }),\n                        animate('0.25s ease-in')\n                    ]),\n                    transition('flyRight => void', [\n                        animate('0.25s 10ms ease-out', style({\n                            opacity: 0, transform: 'translateX(100%)'\n                        }))\n                    ]),\n                    transition('void => flyLeft', [\n                        style({\n                            opacity: 0, transform: 'translateX(-100%)'\n                        }),\n                        animate('0.25s ease-in')\n                    ]),\n                    transition('flyLeft => void', [\n                        animate('0.25s 10ms ease-out', style({\n                            opacity: 0, transform: 'translateX(-100%)'\n                        }))\n                    ]),\n                    transition('void => slideDown', [\n                        style({\n                            opacity: 0, transform: 'translateY(-200%)'\n                        }),\n                        animate('0.3s ease-in')\n                    ]),\n                    transition('slideDown => void', [\n                        animate('0.3s 10ms ease-out', style({\n                            opacity: 0, transform: 'translateY(200%)'\n                        }))\n                    ]),\n                    transition('void => slideUp', [\n                        style({\n                            opacity: 0, transform: 'translateY(200%)'\n                        }),\n                        animate('0.3s ease-in')\n                    ]),\n                    transition('slideUp => void', [\n                        animate('0.3s 10ms ease-out', style({\n                            opacity: 0, transform: 'translateY(-200%)'\n                        }))\n                    ]),\n                    transition('void => fade', [\n                        style({\n                            opacity: 0,\n                        }),\n                        animate('0.3s ease-in')\n                    ]),\n                    transition('fade => void', [\n                        animate('0.3s 10ms ease-out', style({\n                            opacity: 0,\n                        }))\n                    ])\n                ]),\n            ]\n        }),\n        __metadata(\"design:paramtypes\", [ToasterService, ChangeDetectorRef, NgZone])\n    ], ToasterContainerComponent);\n    return ToasterContainerComponent;\n}());\nexport { ToasterContainerComponent };\n//# sourceMappingURL=toaster-container.component.js.map","\n        <div id=\"toast-container\" [ngClass]=\"[toasterconfig.positionClass]\">\n            <div toastComp *ngFor=\"let toast of toasts\" class=\"toast\" [toast]=\"toast\"\n                [@toastState]=\"toasterconfig.animation\"\n                [iconClass]=\"toasterconfig.iconClasses[toast.type]\"\n                [titleClass]=\"toasterconfig.titleClass\"\n                [messageClass]=\"toasterconfig.messageClass\"\n                [ngClass]=\"toasterconfig.typeClasses[toast.type]\"\n                (click)=\"click(toast)\" (clickEvent)=\"childClick($event)\"\n                (mouseover)=\"stopTimer(toast)\" (mouseout)=\"restartTimer(toast)\">\n            </div>\n        </div>\n        ","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastComponent } from './toast.component';\nimport { ToasterContainerComponent } from './toaster-container.component';\nimport { ToasterService } from './toaster.service';\nvar ToasterModule = /** @class */ (function () {\n    function ToasterModule() {\n    }\n    ToasterModule_1 = ToasterModule;\n    ToasterModule.forRoot = function () {\n        return {\n            ngModule: ToasterModule_1,\n            providers: [ToasterService, ToasterContainerComponent]\n        };\n    };\n    ToasterModule.forChild = function () {\n        return {\n            ngModule: ToasterModule_1,\n            providers: [ToasterContainerComponent]\n        };\n    };\n    var ToasterModule_1;\n    ToasterModule = ToasterModule_1 = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [\n                ToastComponent,\n                ToasterContainerComponent\n            ],\n            exports: [\n                ToasterContainerComponent,\n                ToastComponent\n            ]\n        })\n    ], ToasterModule);\n    return ToasterModule;\n}());\nexport { ToasterModule };\n//# sourceMappingURL=toaster.module.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n// http://stackoverflow.com/questions/26501688/a-typescript-guid-class\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    Guid.newGuid = function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n    return Guid;\n}());\nvar ToasterService = /** @class */ (function () {\n    /**\n     * Creates an instance of ToasterService.\n     */\n    function ToasterService() {\n        var _this = this;\n        this.addToast = new Observable(function (observer) { return _this._addToast = observer; }).pipe(share());\n        this.clearToasts = new Observable(function (observer) { return _this._clearToasts = observer; }).pipe(share());\n        this._removeToastSubject = new Subject();\n        this.removeToast = this._removeToastSubject.pipe(share());\n    }\n    /**\n     * Synchronously create and show a new toast instance.\n     *\n     * @param {(string | Toast)} type The type of the toast, or a Toast object.\n     * @param {string=} title The toast title.\n     * @param {string=} body The toast body.\n     * @returns {Toast}\n     *          The newly created Toast instance with a randomly generated GUID Id.\n     */\n    ToasterService.prototype.pop = function (type, title, body) {\n        var toast = typeof type === 'string' ? { type: type, title: title, body: body } : type;\n        if (!toast.toastId) {\n            toast.toastId = Guid.newGuid();\n        }\n        if (!this._addToast) {\n            throw new Error('No Toaster Containers have been initialized to receive toasts.');\n        }\n        this._addToast.next(toast);\n        return toast;\n    };\n    /**\n     * Asynchronously create and show a new toast instance.\n     *\n     * @param {(string | Toast)} type The type of the toast, or a Toast object.\n     * @param {string=} title The toast title.\n     * @param {string=} body The toast body.\n     * @returns {Observable<Toast>}\n     *          A hot Observable that can be subscribed to in order to receive the Toast instance\n     *          with a randomly generated GUID Id.\n     */\n    ToasterService.prototype.popAsync = function (type, title, body) {\n        var _this = this;\n        setTimeout(function () {\n            _this.pop(type, title, body);\n        }, 0);\n        return this.addToast;\n    };\n    /**\n     * Clears a toast by toastId and/or toastContainerId.\n     *\n     * @param {string} toastId The toastId to clear.\n     * @param {number=} toastContainerId\n     *        The toastContainerId of the container to remove toasts from.\n     */\n    ToasterService.prototype.clear = function (toastId, toastContainerId) {\n        var clearWrapper = {\n            toastId: toastId, toastContainerId: toastContainerId\n        };\n        this._clearToasts.next(clearWrapper);\n    };\n    ToasterService = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], ToasterService);\n    return ToasterService;\n}());\nexport { ToasterService };\n//# sourceMappingURL=toaster.service.js.map","import { Observable } from 'rxjs';\nimport { _catch } from '../../operator/catch';\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n//# sourceMappingURL=catch.js.map","import { Observable } from 'rxjs';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map","import { catchError as higherOrder } from 'rxjs/operators';\nexport function _catch(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=catch.js.map","import { map as higherOrderMap } from 'rxjs/operators';\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map","\r\nexport interface IAuthDetails {\r\n    token: string;\r\n    username: string;\r\n    roles: string[];\r\n}\r\n\r\nexport interface IResultVM {\r\n    status: StatusEnum;\r\n    message: string;\r\n    token: string;\r\n    roles: string[];\r\n    username: string;\r\n    data: {};\r\n}\r\n\r\nexport enum StatusEnum {\r\n    Success = 1,\r\n    Error = 2\r\n}\r\n\r\nexport interface ILoginVM {\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\n//tr_usr_user\r\nexport interface IUser {\r\n    id: number;\r\n    usr_user_name: string;//email\r\n    usr_code: number;\r\n    usr_surname: string;\r\n    usr_first_name: string;\r\n    usr_password: string;\r\n    usr_confirmpassword: string;\r\n\r\n    usr_active: boolean;\r\n    date_created: Date;\r\n    date_updated: Date;\r\n}\r\n\r\nexport interface RegisterVM {\r\n    usr_user_name: string;\r\n    usr_surname: string;\r\n    usr_first_name: string;\r\n    usr_password: string;\r\n    usr_confirm_password: string;\r\n}\r\n\r\n\r\nexport interface ITournament {\r\n    id?: number;\r\n    tournament_name: string;\r\n    // Events: Array<Event>\r\n}\r\n\r\nexport interface IDialogMessage{\r\n    message?:string;\r\n    data?:any;\r\n    valid:boolean;\r\n}\r\nexport interface IEvent {\r\n    id: number;\r\n    tournament_id: number;\r\n    event_name: string;\r\n    event_number: number;\r\n    event_date_time: Date;\r\n    event_end_date_time: Date;\r\n    auto_close: boolean;\r\n    tournament?:ITournament;    \r\n    //  event_details :Array<EventDetail>\r\n}\r\n\r\nexport interface IEventDetail{\r\n    id :number\r\n    event_id :number;\r\n    event_status_id :number;\r\n    event_detail_name :string;\r\n    event_detail_number :number;\r\n    event_detail_odd :number;\r\n    finishing_position :number;\r\n    first_timer :boolean,\r\n    event_detail_status?: IEventDetailStatus,\r\n    _event?:IEvent,\r\n    color?:string,\r\n    backgroundColor?:string;\r\n    order?:number;\r\n\r\n}\r\n\r\nexport interface IEventDetailStatus{\r\n\r\n     id :number;\r\n\r\n     event_detail_status_name :string\r\n    //  eventdetails :Array<IEventDetail>\r\n}\r\nexport interface IRegisterVM {\r\n    id: string;\r\n    userName: string;\r\n    email: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    isAdmin: Boolean;\r\n}\r\nexport interface usergroupVM {\r\n    grp_id: number;\r\n    usr_code: number;\r\n    grp_description: string;\r\n}\r\n\r\nexport interface groupFunctionsVM {\r\n    sfu_id: number;\r\n    sfg_deny: boolean;\r\n    grp_id: number;\r\n    sfu_description: string;\r\n}\r\n\r\nexport interface UserVM {\r\n    usr_code: number;\r\n    usr_user_name: string;\r\n    usr_first_name: string;\r\n    usr_surname: string;\r\n    usr_active: boolean;\r\n}\r\n\r\nexport interface LoginResponseVM {\r\n    userVM: UserVM,\r\n    token: string,\r\n    usergroupvm: usergroupVM[],\r\n    groupFunctionvm: groupFunctionsVM\r\n}\r\n\r\nexport interface IForgotPasswordVM {\r\n    id: number;\r\n    user_id: number;\r\n    usr_code: number;\r\n    username: string;\r\n    usr_activated: boolean;\r\n    date_created: Date;\r\n    date_updated?: Date;\r\n    validationsalt: string;\r\n}\r\n\r\nexport interface IUserRecaptcha {\r\n    id: number;\r\n    usr_code: number;\r\n    username: string;\r\n    usr_password: string;\r\n    usr_confirmpassword: string;\r\n    rememberme: boolean;\r\n    usr_active: boolean;\r\n    captcha: boolean;\r\n}\r\n\r\nexport interface IRoleMenu {\r\n    role_id: number;\r\n    menu_id: number;\r\n    loggedin: boolean;\r\n    date_created: Date;\r\n}\r\n\r\nexport interface IAccountSearchVM {\r\n    searchquery: string;\r\n    criteria: number;\r\n    // acc_account_code :string;\r\n    // ped_id_number: string;\r\n    // pho_phone_number:string;\r\n    currentpage: number;\r\n    itemsperpage: number;\r\n}\r\n\r\nexport interface IAccountDetailVM {\r\n    acc_code: number;\r\n    acc_account_code_old: number;\r\n    acc_store_name: string;\r\n    acc_store_number: string;\r\n    acy_description: string;\r\n    crs_description: string;\r\n    agn_description: string;\r\n    cmp_name: string;\r\n    acc_payment_reference: string;\r\n}\r\n\r\nexport interface IAccountSummaryVM {\r\n        acc_code: number;\r\n    acc_account_code: string;\r\n    fullname: string;\r\n    bck_id: number;\r\n    bck_description: string;\r\n    pho_phone_number: string;\r\n    ped_id_number: string;\r\n}\r\n\r\nexport interface IPropertyTypeVM {\r\n    pty_id: number;\r\n    pty_description: string;\r\n    pty_active: boolean;\r\n}\r\n\r\nexport interface IContactAddressVM {\r\n    per_code: number;\r\n    adr_code: number;\r\n    adr_line_1: string;\r\n    adr_line_2: string;\r\n    adr_suburb: string;\r\n    adr_city_or_Town: string;\r\n    adr_province_or_state: string;\r\n    adr_country: string;\r\n    adr_post_code: string;\r\n    adt_id: number;\r\n    pty_id: number;\r\n}\r\n\r\nexport class AddressVM {\r\n    homeaddress: IContactAddressVM;\r\n    postaladdress: IContactAddressVM;\r\n    employeraddress: IContactAddressVM;\r\n}\r\n\r\nexport interface IContactInformationVM {\r\n    acc_code: number;\r\n    per_code: number;\r\n    ret_id: number;\r\n    ret_description: string;\r\n    fullname: string;\r\n    cell_number: string;\r\n    home_phone_number: string;\r\n    work_phone_number: string;\r\n    email_personal_address: string;\r\n    email_work_address: string;\r\n    postal_address: string;\r\n    postal_code_postal: string;\r\n    home_address: string;\r\n    postal_code_home: string;\r\n    employer_address: string;\r\n    postal_code_employer: string;\r\n    ped_current: string;\r\n    acc_status: number;\r\n    id_number: string,\r\n    date_of_birth: Date,\r\n    lng_Description: string,\r\n    marital_status: string,\r\n    employer: string,\r\n    occupation: string,\r\n    department: string,\r\n    date_employed: string,\r\n    supervisor: string,\r\n    employee_code: string,\r\n    salary_amount: number,\r\n    salary_paydate: string,\r\n    isFlipped: boolean;\r\n    cell_number_status: number;\r\n    home_phone_number_status: number;\r\n    work_phone_number_status: number;\r\n    postal_address_status: number;\r\n    employer_address_status: number;\r\n    home_address_status: number;\r\n\r\n}\r\nexport interface IContactPersonVM {\r\n    ptl_id: number;\r\n    ped_name_1: string;\r\n    ped_surname: string;\r\n    ped_id_number: string;\r\n    ped_date_of_birth: Date;\r\n    lng_id: number;\r\n    mts_id: number;\r\n    ped_employer: string;\r\n    ped_occupation: string;\r\n    ped_department: string;\r\n    ped_date_employed: Date;\r\n    ped_supervisor: string;\r\n    ped_clock_number: string;\r\n    ped_salary: string;\r\n    spm_description: string;\r\n}\r\n\r\nexport interface IAccountGeneralInformationVM {\r\n    acc_code: number;\r\n    acc_account_code: string;\r\n    acc_outstanding_balance: number;\r\n    acc_age: number;\r\n    acc_score: boolean;\r\n    acc_profile: number;\r\n    acc_recency: number;\r\n    acc_mos: number;\r\n    acc_status: number;\r\n    acc_memo_interest_amount: number;\r\n    acc_payment_frequency: string;\r\n}\r\n\r\nexport interface IAccountFinancialBalanceVM {\r\n    acc_code: number;\r\n    acc_charge_off_amount: number;\r\n    acc_outstanding_balance: number;\r\n    acc_installment: number;\r\n    acc_arrears_amount: number;\r\n    acc_total_due: number;\r\n    acc_last_payment_amount: number;\r\n    acc_settlement_amount: number;\r\n}\r\nexport interface IAccountFinancialDatesVM {\r\n    acc_code: number;\r\n    acc_date_charge_off: Date;\r\n    acc_date_taken_on: Date;\r\n    acc_date_account_opened: Date;\r\n    acc_date_taken_on_effective: Date;\r\n    acc_date_write_off: Date;\r\n    acc_date_closed: Date;\r\n    acc_date_paid_prior: Date;\r\n}\r\n\r\nexport interface ITitleVM {\r\n    ptl_id: number;\r\n    ptl_description: string;\r\n}\r\n\r\nexport interface IMaritalStatusVM {\r\n    mts_id: number;\r\n    mts_description: string;\r\n}\r\n\r\nexport interface ILanguageVM {\r\n    lng_id: number;\r\n    lng_Description: string;\r\n}\r\n\r\n\r\nexport interface ISalaryPaymentDateVM {\r\n    spm_id: number;\r\n    spm_description: string;\r\n}\r\n\r\n\r\nexport interface IScriptVM {\r\n    scr_id: number;\r\n    scr_description: string;\r\n    scr_text: string;\r\n}\r\n// tittles: ;\r\n// maritalstatuses: ;\r\n// languages: \r\nexport interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    items: T;\r\n    pagination: Pagination;\r\n}\r\n\r\nexport interface Predicate<T> {\r\n    // (item: T): boolean\r\n    Predicate<T>(item: T): boolean;\r\n}\r\n\r\n"],"sourceRoot":""}